#TEMPERATUREWIDGET
#rows[]
#   name
#   icon
#   *unit        (default °C)
#   *port        (default 8089)
#   resource     ("" for turning off api fetching)
#   component
#   * (default 5)
#   *input{}     (default null)
#       max
#       min
#   *sub_rows[]  (default null)
#       name
#       icon
#       unit
#       port
#       resource
#       component
#       
#       input{}
#           max
#           min
#graph
#   
DashboardPanel:
  LedArrayWidget:
    sliders:
      - name: "Channel 1"
        min: 0
        max: 1
        step: 0.01
        channel: 0
      - name: "Channel 2"
        min: 0
        max: 1
        step: 0.01
        channel: 1
      - name: "Channel 3"
        min: 0
        max: 1
        step: 0.01
        channel: 2
      - name: "Channel 4"
        min: 0
        max: 1
        step: 0.01
        channel: 3
  ControlWidget:
    sliders:
      - name: "Aerator"
        min: 0
        max: 1
        step: 0.01
        unit: " "
        decimalPlaces: 2
        port: 8089
        component: "speed"
        resource: "/control/aerator/speed"
      - name: "Mixer"
        min: 0
        max: 1
        step: 0.01
        unit: " "
        decimalPlaces: 2
        port: 8089
        component: "speed"
        resource: "/control/mixer/speed"
      - name: "Cuvette pump"
        min: -1
        max: 1
        step: 0.05
        unit: " "
        decimalPlaces: 2
        port: 8089
        component: "speed"
        resource: "/control/cuvette_pump/speed"
      - name: "Heater"
        min: -1
        max: 1
        step: 0.05
        unit: " "
        decimalPlaces: 2
        port: 8089
        component: "intensity"
        resource: "/control/heater/intensity"
      - name: "Heater target temperature"
        type: "setter"
        unit: "°C"
        decimalPlaces: 2
        min: 0
        max: 90
        getter:
          port: 8089
          component: "temperature"
          resource: "/control/heater/target_temperature"
        setter:
          port: 8089
          component: "temperature"
          resource: "/control/heater/target_temperature"
        reset:
          port: 8089
          component: ""
          resource: "/control/heater/turn_off"